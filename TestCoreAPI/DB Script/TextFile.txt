-- =============================================
-- Author: <Vivek Choudhary>
-- Create date: <29.Sep.2022>
-- Description:	<This procedure is used to update the verification status for logged in user from login and security page ex : pan verify, aadhaar verify etc>
-- =============================================
ALTER Procedure [dbo].[USP_ADMIN_UsersDocverification_Update]

@col nvarchar(50),
@colVal nvarchar(50) = null,
@status int,
@partyId nvarchar(500)
as
begin
	if(@col = 'Aadhar')
		begin
			update PRTYMST set iAadharVerifed = @status, sAadharCrd=case when @colVal is null then sAadharCrd else @colVal end where sPK_PrtyCode = @partyId
			select 1 as StatusCode , 'Updated Successfully' as [Message]
		end
	if(@col = 'Email')
		begin
			update PRTYMST set iEmailVerifed = @status, sEmailId=@colVal where sPK_PrtyCode = @partyId
			select 1 as StatusCode , 'Updated Successfully' as [Message]
		end
	if(@col = 'Pan')
		begin
			update PRTYMST set iPanVerifed = @status, sPanCrd=case when @colVal is null then sPanCrd else @colVal end where sPK_PrtyCode = @partyId
			select 1 as StatusCode , 'Updated Successfully' as [Message]
		end
	if(@col = 'Mobile')
		begin
			update PRTYMST set sMobileVerifed = @status, sMobileNo =@colVal where sPK_PrtyCode = @partyId
			select 1 as StatusCode , 'Updated Successfully' as [Message]
		end
	if(@col = 'Role')
		begin
			update PRTYMST set iRoleId = @colVal where sPK_PrtyCode = @partyId
			select 1 as StatusCode , 'Updated Successfully' as [Message]
		end
end

Go

____________________________________________________________________________________________________________________________________________________

 --========================================================================
 --Author:<Vivek Choudhary>
 --Create Date:<26.Sep.2022>
 --Description:<This procedure is use to bind the grid on active in-active user page>
 --======================================================================
ALTER Procedure [dbo].[USP_ADMIN_Active_InactiveUser_View]
as
begin
	--select Typedata.Name as userType,T2.PartyId,Isnull(T2.RegistrationNo,'NA') as RegistrationNo,T2.Name as userName,T2.FirstName,T2.MobileNumber,
	--Isnull(STUFF((Select ','+CategoryMaster.Name    
	--from (select PartyMaster.PartyId,value from PartyMaster cross apply string_split(ServicesCollection,',')) T1    
	--inner join CategoryMaster on T1.value=CategoryMaster.CategoryId    
	--where T1.PartyId=T2.PartyId
	--FOR XML PATH('')),1,1,''),'NA') ServiceList,'NA' as HardwareList,PaymentStatus,isnull(T2.IsActive,0) IsActive
	--from PartyMaster T2  inner join 
	--CustomEnum Typedata on Typedata.Id=T2.Type and Typedata.EnumNo=7
	--Left outer join OrderBooking OB on OB.RegistrationNo = T2.RegistrationNo

	Begin try
		select '' as UserType
		,T2.sPK_PrtyCode
		,Isnull(T2.sRegNo,'NA') as RegistrationNo
		,T2.sName as UserName
		,T2.sFstName
		,T2.sMobileNo
		,T2.sEmailId
		,'' Servicecollection
		,'' Hardwarecollection
		,isnull(T2.iIsActv,0) IsActive
		,'' as PaymentStatus
		,R.sRolName as Role
		,T2.iRoleId
			from PRTYMST T2 inner join ROLEMST R on R.iPk_RolId = T2.iRoleId
			where sSrvicC is null and iLocLvl is not null
order by T2.dtCrtdDt desc

	End Try 
	begin catch			
			EXEC [dbo].[USP_ADMIN_StoreProcedureErrorHandling_Save] 0,0,1 --To log Stored procedure errors
			select -1 as StatusCode, 'Check Error - ' + cast(ERROR_Number() as varchar) + ' ' + ERROR_MESSAGE () as [Message],'' AS Body
	end catch

end

GO
__________________________________________________________________________________________________________________________________________